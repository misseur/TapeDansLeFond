{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import path from 'path';\nimport camelCase from 'lodash.camelcase';\n\nexport default ({\n    types: t\n}) => {\n    const isAnnonFunctionDecl = (declaration) => {\n        return (declaration.type === 'FunctionExpression' || declaration.type === 'FunctionDeclaration') &&\n               !(declaration.id && declaration.id.name);\n    };\n\n    const isAnnonClassDecl = (declaration) => {\n        return (declaration.type === 'ClassExpression' || declaration.type === 'ClassDeclaration') &&\n               !(declaration.id && declaration.id.name);\n    };\n\n    const isArrowFunctionDecl = (declaration) => {\n        return declaration.type === 'ArrowFunctionExpression';\n    };\n\n    const deduceName = (pluginPass, scope) => {\n        const filename = pluginPass && pluginPass.file && pluginPass.file.opts && pluginPass.file.opts.filename;\n\n        let name = filename;\n        name = name && path.basename(name).replace(/\\.jsx?$/, '');\n        if (name === 'index') {\n            const dirname = path.basename(path.dirname(filename));\n            if (dirname && dirname !== '.') name = dirname;\n        }\n        name = name && camelCase(name);\n\n        if (/^[0-9]/.test(name)) {\n            name = '_' + name;\n        }\n\n        if (!t.isValidIdentifier(name)) {\n            throw Error('Invalid identifier \"' + name + '\".');\n        }\n\n        return resolveClashingName(name, scope);\n    };\n\n    const resolveClashingName = (name, scope) => {\n        let index,\n            resolvedName;\n\n        index = 0;\n        resolvedName = name;\n        while (scope.hasBinding(resolvedName) && index < 100) {\n            resolvedName = name + index++;\n        }\n        if (index > 100) {\n            throw Error('Couldn\\'t resolve clashing name \"' + name + '\".');\n        }\n        return resolvedName;\n    };\n\n    return {\n        visitor: {\n            ExportDefaultDeclaration (path, pluginPass) {\n                const declaration = path.node.declaration;\n\n                if (isAnnonClassDecl(declaration) || isAnnonFunctionDecl(declaration)) {\n                    // replace\n                    declaration.id = t.identifier(deduceName(pluginPass, path.scope));\n                }\n\n                if (isArrowFunctionDecl(declaration)) {\n                    path.get('declaration').arrowFunctionToShadowed();\n                    declaration.id = t.identifier(deduceName(pluginPass, path.scope))\n                }\n\n                if (\n                  pluginPass && pluginPass.opts && pluginPass.opts.compose\n                  && t.isCallExpression(declaration)\n                  && declaration.arguments.length === 1\n                  && t.isArrowFunctionExpression(declaration.arguments[0])\n                ) {\n                  path.get('declaration.arguments.0').arrowFunctionToShadowed();\n                  declaration.arguments[0].id = t.identifier(deduceName(pluginPass, path.scope))\n                }\n            }\n        }\n    };\n};\n"]}