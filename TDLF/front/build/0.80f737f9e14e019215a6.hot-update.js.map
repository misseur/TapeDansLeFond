{"version":3,"sources":["webpack:///./~/vitaminjs/config/build/webpack.config.client.js?7aa1"],"names":["clientConfig","options","hotMiddlewareEntry","publicPath","mergeWith","config","entry","vitaminResolve","hot","output","path","client","buildPath","filename","module","rules","createBabelLoader","createResolveConfigLoader","plugins","webpack","NoErrorsPlugin","optimize","OccurrenceOrderPlugin","dev","UglifyJsPlugin","minimize","DefinePlugin","serviceWorker","appResolve"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;;AAEe,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAC1C,UAAMC,qBACD,sCAAqCD,QAAQE,UAAW,gBAD7D;AAEA,WAAO,wDAAAC,CAAU,EAAV,EAAc,gGAAAC,CAAOJ,OAAP,CAAd,EAA+B;AAClCK,eAAO,CACH,qFAAAC,CAAe,KAAf,EAAsB,QAAtB,EAAgC,WAAhC,CADG,EAEH,IAAIN,QAAQO,GAAR,GAAc,CAACN,kBAAD,CAAd,GAAqC,EAAzC,CAFG,CAD2B;AAKlCO,gBAAQ;AACJC,kBAAMT,QAAQU,MAAR,CAAeC,SADjB;AAEJC,sBAAUZ,QAAQU,MAAR,CAAeE;AAFrB,SAL0B;AASlCC,gBAAQ;AACJC,mBAAO,CACH,2GAAAC,CAAkB,QAAlB,CADG,EAEH,mHAAAC,EAFG;AADH,SAT0B;AAelCC,iBAAS,CACL,IAAIjB,QAAQO,GAAR,GAAc,CACd,IAAI,+CAAAW,CAAQC,cAAZ,EADc,EAEd,IAAI,+CAAAD,CAAQE,QAAR,CAAiBC,qBAArB,EAFc,CAAd,GAGA,EAHJ,CADK,EAKL,IAAI,CAACrB,QAAQsB,GAAT,GAAe,CACf,IAAI,+CAAAJ,CAAQE,QAAR,CAAiBG,cAArB,CAAoC,EAAEC,UAAU,IAAZ,EAApC,CADe,CAAf,GAEA,EAFJ,CALK,EAQL,IAAI,+CAAAN,CAAQO,YAAZ,CAAyB;AACrB,oCAAwB;AADH,SAAzB,CARK,EAWL,IAAIzB,QAAQU,MAAR,CAAegB,aAAf,GAA+B,CAC/B,IAAI,oEAAJ,CAA+B;AAC3BrB,mBAAO,iFAAAsB,CAAW3B,QAAQU,MAAR,CAAegB,aAA1B;AADoB,SAA/B,CAD+B,CAA/B,GAIA,EAJJ,CAXK;AAfyB,KAA/B,EAgCJ,sDAhCI,CAAP;AAiCH,C","file":"0.80f737f9e14e019215a6.hot-update.js","sourcesContent":["import mergeWith from 'lodash.mergewith';\nimport webpack from 'webpack';\nimport ServiceWorkerWebpackPlugin from 'serviceworker-webpack-plugin';\n\nimport { createBabelLoader, createResolveConfigLoader, config } from './webpack.config.common.js';\nimport { concat, vitaminResolve, appResolve } from '../utils';\n\nexport default function clientConfig(options) {\n    const hotMiddlewareEntry =\n        `webpack-hot-middleware/client?path=${options.publicPath}/__webpack_hmr`;\n    return mergeWith({}, config(options), {\n        entry: [\n            vitaminResolve('src', 'client', 'index.jsx'),\n            ...(options.hot ? [hotMiddlewareEntry] : []),\n        ],\n        output: {\n            path: options.client.buildPath,\n            filename: options.client.filename,\n        },\n        module: {\n            rules: [\n                createBabelLoader('client'),\n                createResolveConfigLoader(),\n            ],\n        },\n        plugins: [\n            ...(options.hot ? [\n                new webpack.NoErrorsPlugin(),\n                new webpack.optimize.OccurrenceOrderPlugin(),\n            ] : []),\n            ...(!options.dev ? [\n                new webpack.optimize.UglifyJsPlugin({ minimize: true }),\n            ] : []),\n            new webpack.DefinePlugin({\n                'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\n            }),\n            ...(options.client.serviceWorker ? [\n                new ServiceWorkerWebpackPlugin({\n                    entry: appResolve(options.client.serviceWorker),\n                }),\n            ] : []),\n        ],\n    }, concat);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vitaminjs/config/build/webpack.config.client.js"],"sourceRoot":""}